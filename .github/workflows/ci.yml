name: Docker Image CI/CD

on:
  push:
    branches:
      - main

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          frontend:
            - 'copilot-web/**'
          backend:
            - 'copilot-backend/**'

  build-and-push:
    needs: check_changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
        continue-on-error: true

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Node.js
        if: needs.check_changes.outputs.frontend == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm dependencies
        if: needs.check_changes.outputs.frontend == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Build React Frontend
        if: needs.check_changes.outputs.frontend == 'true'
        run: |
          cd ./copilot-web
          npm ci
          npm install --save-dev @babel/plugin-proposal-private-property-in-object
          NODE_NO_WARNINGS=1 npm run build
          cd ..

      - name: Build and push frontend
        if: needs.check_changes.outputs.frontend == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./copilot-web
          push: true
          tags: mujahid002/sherlock-ai-frontend-groq:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Build and push backend
        if: needs.check_changes.outputs.backend == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./copilot-backend
          push: true
          tags: mujahid002/sherlock-ai-backend-groq:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          if [ -d /tmp/.buildx-cache-new ]; then
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          fi

      - name: Check if anything was built
        if: needs.check_changes.outputs.frontend != 'true' && needs.check_changes.outputs.backend != 'true'
        run: echo "No changes detected in frontend or backend. Skipping build and push."

#      - name: Deploy to Remote Server
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.REMOTE_HOST }}
#          username: ${{ secrets.REMOTE_USER }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          port: 22  # Specify your SSH port if it's not the default
#          script: |
#            cd /home/bestbottle/
#            ./script.sh