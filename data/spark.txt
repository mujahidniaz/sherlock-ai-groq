from pyspark.sql import SparkSession
from pyspark.sql.functions import col

# Initialize a Spark session
spark = SparkSession.builder \
    .appName("NPI Data Processing") \
    .getOrCreate()

# Databricks notebook source
# import zipfile
# import shutil

# # Define the paths
# zip_file_path = 'dbfs:/FileStore/mujahid/NPPES_Data_Dissemination_June_2024.zip'
# move_to_path = '/dbfs/mnt/mujahid-experiments/NPPES_Data_Dissemination_June_2024.zip'
# extract_to_path = '/dbfs/mnt/mujahid-experiments/NPPES_Data_Dissemination_June_2024/'

# # Move the zip file to the desired location
# # dbutils.fs.mv(zip_file_path, move_to_path)

# # Extract the zip file
# with zipfile.ZipFile(move_to_path, 'r') as zip_ref:
#     zip_ref.extractall(extract_to_path)

# COMMAND ----------


# Load CSV into a Spark DataFrame
csv_path = 'npi_dataset/npidata_pfile_20050523-20240707.csv'
df = spark.read.csv(csv_path, header=True, inferSchema=True)
# # Write the DataFrame to a Delta table
# delta_path = 'dbfs:/mnt/mujahid-experiments/NPPES_Data_Dissemination_July_2024/delta_table'
# df.write.format('delta').mode('overwrite').save(delta_path)

# # Create a Delta table
# spark.sql(f"""
# CREATE TABLE IF NOT EXISTS nppes_delta_table
# USING DELTA
# LOCATION '{delta_path}'
# """)

# COMMAND ----------

# delta_path = 'dbfs:/mnt/mujahid-experiments/NPPES_Data_Dissemination_July_2024/raw_delta_table/'
# df.write.format('delta').mode('overwrite').save(delta_path)

# # Create a Delta table
# spark.sql(f"""
# ALTER TABLE nppes_delta_table SET TBLPROPERTIES (
#    'delta.columnMapping.mode' = 'name',
#    'delta.minReaderVersion' = '2',
#    'delta.minWriterVersion' = '5')
# """)

# COMMAND ----------

# Create a temporary view on the Delta table
df.createOrReplaceTempView("nppes_temp_view")

# COMMAND ----------

# Drop specified columns from the DataFrame
columns_to_drop = [
    'Healthcare Provider Primary Taxonomy Switch_1', 'Healthcare Provider Primary Taxonomy Switch_2',
    'Healthcare Provider Primary Taxonomy Switch_3', 'Healthcare Provider Primary Taxonomy Switch_4',
    'Healthcare Provider Primary Taxonomy Switch_5', 'Healthcare Provider Primary Taxonomy Switch_6',
    'Healthcare Provider Primary Taxonomy Switch_7', 'Healthcare Provider Primary Taxonomy Switch_8',
    'Healthcare Provider Primary Taxonomy Switch_9', 'Healthcare Provider Primary Taxonomy Switch_10',
    'Healthcare Provider Primary Taxonomy Switch_11', 'Healthcare Provider Primary Taxonomy Switch_12',
    'Healthcare Provider Primary Taxonomy Switch_13', 'Healthcare Provider Primary Taxonomy Switch_14',
    'Healthcare Provider Primary Taxonomy Switch_15', 'Other Provider Identifier_1',
    'Other Provider Identifier Type Code_1', 'Other Provider Identifier State_1',
    'Other Provider Identifier Issuer_1', 'Other Provider Identifier_2',
    'Other Provider Identifier Type Code_2', 'Other Provider Identifier State_2',
    'Other Provider Identifier Issuer_2', 'Other Provider Identifier_3',
    'Other Provider Identifier Type Code_3', 'Other Provider Identifier State_3',
    'Other Provider Identifier Issuer_3', 'Other Provider Identifier_4',
    'Other Provider Identifier Type Code_4', 'Other Provider Identifier State_4',
    'Other Provider Identifier Issuer_4', 'Other Provider Identifier_5',
    'Other Provider Identifier Type Code_5', 'Other Provider Identifier State_5',
    'Other Provider Identifier Issuer_5', 'Other Provider Identifier_6',
    'Other Provider Identifier Type Code_6', 'Other Provider Identifier State_6',
    'Other Provider Identifier Issuer_6', 'Other Provider Identifier_7',
    'Other Provider Identifier Type Code_7', 'Other Provider Identifier State_7',
    'Other Provider Identifier Issuer_7', 'Other Provider Identifier_8',
    'Other Provider Identifier Type Code_8', 'Other Provider Identifier State_8',
    'Other Provider Identifier Issuer_8', 'Other Provider Identifier_9',
    'Other Provider Identifier Type Code_9', 'Other Provider Identifier State_9',
    'Other Provider Identifier Issuer_9', 'Other Provider Identifier_10',
    'Other Provider Identifier Type Code_10', 'Other Provider Identifier State_10',
    'Other Provider Identifier Issuer_10', 'Other Provider Identifier_11',
    'Other Provider Identifier Type Code_11', 'Other Provider Identifier State_11',
    'Other Provider Identifier Issuer_11', 'Other Provider Identifier_12',
    'Other Provider Identifier Type Code_12', 'Other Provider Identifier State_12',
    'Other Provider Identifier Issuer_12', 'Other Provider Identifier_13',
    'Other Provider Identifier Type Code_13', 'Other Provider Identifier State_13',
    'Other Provider Identifier Issuer_13', 'Other Provider Identifier_14',
    'Other Provider Identifier Type Code_14', 'Other Provider Identifier State_14',
    'Other Provider Identifier Issuer_14', 'Other Provider Identifier_15',
    'Other Provider Identifier Type Code_15', 'Other Provider Identifier State_15',
    'Other Provider Identifier Issuer_15', 'Other Provider Identifier_16',
    'Other Provider Identifier Type Code_16', 'Other Provider Identifier State_16',
    'Other Provider Identifier Issuer_16', 'Other Provider Identifier_17',
    'Other Provider Identifier Type Code_17', 'Other Provider Identifier State_17',
    'Other Provider Identifier Issuer_17', 'Other Provider Identifier_18',
    'Other Provider Identifier Type Code_18', 'Other Provider Identifier State_18',
    'Other Provider Identifier Issuer_18', 'Other Provider Identifier_19',
    'Other Provider Identifier Type Code_19', 'Other Provider Identifier State_19',
    'Other Provider Identifier Issuer_19', 'Other Provider Identifier_20',
    'Other Provider Identifier Type Code_20', 'Other Provider Identifier State_20',
    'Other Provider Identifier Issuer_20', 'Other Provider Identifier_21',
    'Other Provider Identifier Type Code_21', 'Other Provider Identifier State_21',
    'Other Provider Identifier Issuer_21', 'Other Provider Identifier_22',
    'Other Provider Identifier Type Code_22', 'Other Provider Identifier State_22',
    'Other Provider Identifier Issuer_22', 'Other Provider Identifier_23',
    'Other Provider Identifier Type Code_23', 'Other Provider Identifier State_23',
    'Other Provider Identifier Issuer_23', 'Other Provider Identifier_24',
    'Other Provider Identifier Type Code_24', 'Other Provider Identifier State_24',
    'Other Provider Identifier Issuer_24', 'Other Provider Identifier_25',
    'Other Provider Identifier Type Code_25', 'Other Provider Identifier State_25',
    'Other Provider Identifier Issuer_25', 'Other Provider Identifier_26',
    'Other Provider Identifier Type Code_26', 'Other Provider Identifier State_26',
    'Other Provider Identifier Issuer_26', 'Other Provider Identifier_27',
    'Other Provider Identifier Type Code_27', 'Other Provider Identifier State_27',
    'Other Provider Identifier Issuer_27', 'Other Provider Identifier_28',
    'Other Provider Identifier Type Code_28', 'Other Provider Identifier State_28',
    'Other Provider Identifier Issuer_28', 'Other Provider Identifier_29',
    'Other Provider Identifier Type Code_29', 'Other Provider Identifier State_29',
    'Other Provider Identifier Issuer_29', 'Other Provider Identifier_30',
    'Other Provider Identifier Type Code_30', 'Other Provider Identifier State_30',
    'Other Provider Identifier Issuer_30', 'Other Provider Identifier_31',
    'Other Provider Identifier Type Code_31', 'Other Provider Identifier State_31',
    'Other Provider Identifier Issuer_31', 'Other Provider Identifier_32',
    'Other Provider Identifier Type Code_32', 'Other Provider Identifier State_32',
    'Other Provider Identifier Issuer_32', 'Other Provider Identifier_33',
    'Other Provider Identifier Type Code_33', 'Other Provider Identifier State_33',
    'Other Provider Identifier Issuer_33', 'Other Provider Identifier_34',
    'Other Provider Identifier Type Code_34', 'Other Provider Identifier State_34',
    'Other Provider Identifier Issuer_34', 'Other Provider Identifier_35',
    'Other Provider Identifier Type Code_35', 'Other Provider Identifier State_35',
    'Other Provider Identifier Issuer_35', 'Other Provider Identifier_36',
    'Other Provider Identifier Type Code_36', 'Other Provider Identifier State_36',
    'Other Provider Identifier Issuer_36', 'Other Provider Identifier_37',
    'Other Provider Identifier Type Code_37', 'Other Provider Identifier State_37',
    'Other Provider Identifier Issuer_37', 'Other Provider Identifier_38',
    'Other Provider Identifier Type Code_38', 'Other Provider Identifier State_38',
    'Other Provider Identifier Issuer_38', 'Other Provider Identifier_39',
    'Other Provider Identifier Type Code_39', 'Other Provider Identifier State_39',
    'Other Provider Identifier Issuer_39', 'Other Provider Identifier_40',
    'Other Provider Identifier Type Code_40', 'Other Provider Identifier State_40',
    'Other Provider Identifier Issuer_40', 'Other Provider Identifier_41',
    'Other Provider Identifier Type Code_41', 'Other Provider Identifier State_41',
    'Other Provider Identifier Issuer_41', 'Other Provider Identifier_42',
    'Other Provider Identifier Type Code_42', 'Other Provider Identifier State_42',
    'Other Provider Identifier Issuer_42', 'Other Provider Identifier_43',
    'Other Provider Identifier Type Code_43', 'Other Provider Identifier State_43',
    'Other Provider Identifier Issuer_43', 'Other Provider Identifier_44',
    'Other Provider Identifier Type Code_44', 'Other Provider Identifier State_44',
    'Other Provider Identifier Issuer_44', 'Other Provider Identifier_45',
    'Other Provider Identifier Type Code_45', 'Other Provider Identifier State_45',
    'Other Provider Identifier Issuer_45', 'Other Provider Identifier_46',
    'Other Provider Identifier Type Code_46', 'Other Provider Identifier State_46',
    'Other Provider Identifier Issuer_46', 'Other Provider Identifier_47',
    'Other Provider Identifier Type Code_47', 'Other Provider Identifier State_47',
    'Other Provider Identifier Issuer_47', 'Other Provider Identifier_48',
    'Other Provider Identifier Type Code_48', 'Other Provider Identifier State_48',
    'Other Provider Identifier Issuer_48', 'Other Provider Identifier_49',
    'Other Provider Identifier Type Code_49', 'Other Provider Identifier State_49',
    'Other Provider Identifier Issuer_49', 'Other Provider Identifier_50',
    'Other Provider Identifier Type Code_50', 'Other Provider Identifier State_50',
    'Other Provider Identifier Issuer_50'
]

df_cleaned = df.drop(*columns_to_drop)

# COMMAND ----------

# Create a temporary view on the Delta table
df_cleaned.createOrReplaceTempView("nppes_temp_view_cleaned")

# COMMAND ----------

# MAGIC %sql
# MAGIC SELECT * FROM nppes_temp_view;

# COMMAND ----------

# MAGIC %sql
# MAGIC SELECT * FROM nppes_temp_view_cleaned;

# COMMAND ----------


# Define the columns to check for the specific value
columns_to_check = [
    'Healthcare Provider Taxonomy Code_1', 'Healthcare Provider Taxonomy Code_2',
    'Healthcare Provider Taxonomy Code_3', 'Healthcare Provider Taxonomy Code_4',
    'Healthcare Provider Taxonomy Code_5', 'Healthcare Provider Taxonomy Code_6',
    'Healthcare Provider Taxonomy Code_7', 'Healthcare Provider Taxonomy Code_8',
    'Healthcare Provider Taxonomy Code_9', 'Healthcare Provider Taxonomy Code_10',
    'Healthcare Provider Taxonomy Code_11', 'Healthcare Provider Taxonomy Code_12',
    'Healthcare Provider Taxonomy Code_13', 'Healthcare Provider Taxonomy Code_14',
    'Healthcare Provider Taxonomy Code_15'
]

# Create a list of conditions for each column
conditions = [
    f"`{col}` LIKE '%122300000X%'" for col in columns_to_check
]

# Join the conditions with OR operator
condition_expr = " OR ".join(conditions)

# Filter the DataFrame using SQL query
df_filtered = spark.sql(f"SELECT * FROM nppes_temp_view_cleaned WHERE {condition_expr}")

# Create or replace the temporary view with the filtered DataFrame
df_filtered.createOrReplaceTempView("nppes_temp_view_filtered")

# COMMAND ----------

#print((df.columns, df.count()))

# COMMAND ----------

#print((df_cleaned.columns, df_cleaned.count()))

# COMMAND ----------

# MAGIC %sql
# MAGIC -- select distinct `Healthcare Provider Taxonomy Code_1` from nppes_temp_view_cleaned

# COMMAND ----------

# MAGIC %sql
# MAGIC select * from nppes_temp_view_filtered

# COMMAND ----------

from pyspark.sql.functions import concat_ws, col, lit, when

taxonomy_code_columns = [
    'Healthcare Provider Taxonomy Code_1', 'Healthcare Provider Taxonomy Code_2',
    'Healthcare Provider Taxonomy Code_3', 'Healthcare Provider Taxonomy Code_4',
    'Healthcare Provider Taxonomy Code_5', 'Healthcare Provider Taxonomy Code_6',
    'Healthcare Provider Taxonomy Code_7', 'Healthcare Provider Taxonomy Code_8',
    'Healthcare Provider Taxonomy Code_9', 'Healthcare Provider Taxonomy Code_10',
    'Healthcare Provider Taxonomy Code_11', 'Healthcare Provider Taxonomy Code_12',
    'Healthcare Provider Taxonomy Code_13', 'Healthcare Provider Taxonomy Code_14',
    'Healthcare Provider Taxonomy Code_15'
]

taxonomy_group_columns = [
    'Healthcare Provider Taxonomy Group_1', 'Healthcare Provider Taxonomy Group_2',
    'Healthcare Provider Taxonomy Group_3', 'Healthcare Provider Taxonomy Group_4',
    'Healthcare Provider Taxonomy Group_5', 'Healthcare Provider Taxonomy Group_6',
    'Healthcare Provider Taxonomy Group_7', 'Healthcare Provider Taxonomy Group_8',
    'Healthcare Provider Taxonomy Group_9', 'Healthcare Provider Taxonomy Group_10',
    'Healthcare Provider Taxonomy Group_11', 'Healthcare Provider Taxonomy Group_12',
    'Healthcare Provider Taxonomy Group_13', 'Healthcare Provider Taxonomy Group_14',
    'Healthcare Provider Taxonomy Group_15'
]

license_state_columns = [
    'Provider License Number State Code_1', 'Provider License Number State Code_2',
    'Provider License Number State Code_3', 'Provider License Number State Code_4',
    'Provider License Number State Code_5', 'Provider License Number State Code_6',
    'Provider License Number State Code_7', 'Provider License Number State Code_8',
    'Provider License Number State Code_9', 'Provider License Number State Code_10',
    'Provider License Number State Code_11', 'Provider License Number State Code_12',
    'Provider License Number State Code_13', 'Provider License Number State Code_14',
    'Provider License Number State Code_15'
]

license_number_columns = [
    'Provider License Number_1', 'Provider License Number_2',
    'Provider License Number_3', 'Provider License Number_4',
    'Provider License Number_5', 'Provider License Number_6',
    'Provider License Number_7', 'Provider License Number_8',
    'Provider License Number_9', 'Provider License Number_10',
    'Provider License Number_11', 'Provider License Number_12',
    'Provider License Number_13', 'Provider License Number_14',
    'Provider License Number_15'
]

# Create the new concatenated fields
df_concat = df_filtered.withColumn('Combined Taxonomy Codes', concat_ws(';', *[col(c) for c in taxonomy_code_columns])) \
    .withColumn('Combined Taxonomy Code Groups', concat_ws(';', *[col(c) for c in taxonomy_group_columns])) \
    .withColumn('Licensed in States', concat_ws(';', *[col(c) for c in license_state_columns])) \
    .withColumn('Combined License Numbers', concat_ws(';', *[col(c) for c in license_number_columns]))
selected_columns = [
    'NPI', 'Provider Last Name (Legal Name)', 'Provider First Name', 'Provider First Line Business Mailing Address',
    'Provider Business Mailing Address City Name', 'Provider Business Mailing Address State Name',
    'Provider Business Mailing Address Postal Code', 'Provider Business Mailing Address Telephone Number',
    'Combined Taxonomy Codes', 'Combined Taxonomy Code Groups', 'Licensed in States', 'Combined License Numbers'
]

# #print the filtered data
df_concat=df_concat.select(*selected_columns)
# df_concat.createOrReplaceTempView("df_contacted")
# df_concat.write.csv('dentists_npi_dataset.csv', header=True)
# COMMAND ----------
print(df_concat.count())
# MAGIC %sql
# MAGIC select * from df_contacted;
pandas_df = df_concat.toPandas()

# Write the Pandas DataFrame to a single CSV file
pandas_df.to_csv('combined_dentists.csv', index=False)